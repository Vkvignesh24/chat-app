plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // Add the Google services Gradle plugin for Firebase integration
    id "com.google.gms.google-services"
}

android {
    namespace = "com.example.pro_chat"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Specify your own unique Application ID
        applicationId = "com.example.pro_chat"
        // Update the values to match your project requirements
        minSdkVersion 23  // Change this from 21 to 23
        targetSdkVersion 33
        versionCode flutter.versionCode
        versionName flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build
            // Signing with the debug keys for now, so `flutter run --release` works
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Import the Firebase BoM (Bill of Materials) to manage Firebase versions
    implementation platform('com.google.firebase:firebase-bom:33.4.0')

    // Add Firebase Analytics dependency (you can include other Firebase services here)
    implementation 'com.google.firebase:firebase-analytics'

    // TODO: Add the dependencies for any other Firebase products you want to use
    // Example: for Firestore or Authentication:
    // implementation 'com.google.firebase:firebase-firestore'
    // implementation 'com.google.firebase:firebase-auth'
}

// Apply the Google services plugin at the end to enable Firebase integration
apply plugin: 'com.google.gms.google-services'
